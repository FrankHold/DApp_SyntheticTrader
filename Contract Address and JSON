Address on the test net
0x4cc07570279ECa584b4D19206E0900f2Edbe806a

JSON
[ { "constant": true, "inputs": [], "name": "No_Buy_Orders", "outputs": [ { "name": "", "type": "int256", "value": "0", "displayName": "" } ], "type": "function", "displayName": " No<span class=\"punctuation\">_</span> Buy<span class=\"punctuation\">_</span> Orders" }, { "constant": false, "inputs": [ { "name": "Amount_in_sU", "type": "int256", "typeShort": "int", "bits": "256", "displayName": " Amount&thinsp;<span class=\"punctuation\">_</span>&thinsp;in&thinsp;<span class=\"punctuation\">_</span>&thinsp;s U", "template": "elements_input_int" }, { "name": "Price_in_Wei", "type": "int256", "typeShort": "int", "bits": "256", "displayName": " Price&thinsp;<span class=\"punctuation\">_</span>&thinsp;in&thinsp;<span class=\"punctuation\">_</span>&thinsp; Wei", "template": "elements_input_int" } ], "name": "Buy_Order", "outputs": [], "type": "function", "displayName": " Buy_ Order" }, { "constant": true, "inputs": [], "name": "No_Sell_Orders", "outputs": [ { "name": "", "type": "int256", "value": "0", "displayName": "" } ], "type": "function", "displayName": " No<span class=\"punctuation\">_</span> Sell<span class=\"punctuation\">_</span> Orders" }, { "constant": true, "inputs": [], "name": "sU", "outputs": [ { "name": "", "type": "int256", "value": "1000000000000000000", "displayName": "" } ], "type": "function", "displayName": "s U" }, { "constant": false, "inputs": [ { "name": "Amount_in_sU", "type": "int256", "typeShort": "int", "bits": "256", "displayName": " Amount&thinsp;<span class=\"punctuation\">_</span>&thinsp;in&thinsp;<span class=\"punctuation\">_</span>&thinsp;s U", "template": "elements_input_int" }, { "name": "Price_in_Wei", "type": "int256", "typeShort": "int", "bits": "256", "displayName": " Price&thinsp;<span class=\"punctuation\">_</span>&thinsp;in&thinsp;<span class=\"punctuation\">_</span>&thinsp; Wei", "template": "elements_input_int" } ], "name": "Sell_Order", "outputs": [], "type": "function", "displayName": " Sell_ Order" }, { "constant": true, "inputs": [ { "name": "", "type": "int256", "typeShort": "int", "bits": "256", "displayName": "", "template": "elements_input_int", "value": "3" } ], "name": "Buys", "outputs": [ { "name": "Amount", "type": "int256", "value": "0", "displayName": " Amount" }, { "name": "Price", "type": "int256", "value": "0", "displayName": " Price" }, { "name": "Address", "type": "address", "value": "0x0000000000000000000000000000000000000000", "displayName": " Address" } ], "type": "function", "displayName": " Buys" }, { "constant": true, "inputs": [], "name": "Amount", "outputs": [ { "name": "", "type": "int256", "value": "0", "displayName": "" } ], "type": "function", "displayName": " Amount" }, { "constant": true, "inputs": [ { "name": "", "type": "address", "typeShort": "address", "bits": "", "displayName": "", "template": "elements_input_address", "value": "0x075a36E8827CE7791E5D05A346eD348aEadE5C21" } ], "name": "Own_Security", "outputs": [ { "name": "", "type": "int256", "value": "0", "displayName": "" } ], "type": "function", "displayName": " Own<span class=\"punctuation\">_</span> Security" }, { "constant": false, "inputs": [ { "name": "Price_in_Wei", "type": "int256", "typeShort": "int", "bits": "256", "displayName": " Price&thinsp;<span class=\"punctuation\">_</span>&thinsp;in&thinsp;<span class=\"punctuation\">_</span>&thinsp; Wei", "template": "elements_input_int", "value": "" } ], "name": "Cancel_Order", "outputs": [], "type": "function", "displayName": " Cancel_ Order" }, { "constant": true, "inputs": [ { "name": "", "type": "address", "typeShort": "address", "bits": "", "displayName": "", "template": "elements_input_address", "value": "0x075a36E8827CE7791E5D05A346eD348aEadE5C21" } ], "name": "Own_Amount", "outputs": [ { "name": "", "type": "int256", "value": "0", "displayName": "" } ], "type": "function", "displayName": " Own<span class=\"punctuation\">_</span> Amount" }, { "constant": true, "inputs": [ { "name": "", "type": "address", "typeShort": "address", "bits": "", "displayName": "", "template": "elements_input_address", "value": "0x075a36E8827CE7791E5D05A346eD348aEadE5C21" } ], "name": "Own_Funds", "outputs": [ { "name": "", "type": "int256", "value": "2000000000000000000", "displayName": "" } ], "type": "function", "displayName": " Own<span class=\"punctuation\">_</span> Funds" }, { "constant": true, "inputs": [], "name": "Price", "outputs": [ { "name": "", "type": "int256", "value": "1100000000000000000", "displayName": "" } ], "type": "function", "displayName": " Price" }, { "constant": false, "inputs": [], "name": "Withdraw_All_Funds", "outputs": [], "type": "function", "displayName": " Withdraw_ All_ Funds" }, { "constant": true, "inputs": [ { "name": "", "type": "address", "typeShort": "address", "bits": "", "displayName": "", "template": "elements_input_address", "value": "0x075a36E8827CE7791E5D05A346eD348aEadE5C21" } ], "name": "Own_FeedBack", "outputs": [ { "name": "", "type": "int256", "value": "134191", "displayName": "" } ], "type": "function", "displayName": " Own<span class=\"punctuation\">_</span> Feed Back" }, { "constant": true, "inputs": [], "name": "Ref_Price", "outputs": [ { "name": "", "type": "int256", "value": "1000000000000000000", "displayName": "" } ], "type": "function", "displayName": " Ref<span class=\"punctuation\">_</span> Price" }, { "constant": true, "inputs": [ { "name": "", "type": "int256", "typeShort": "int", "bits": "256", "displayName": "", "template": "elements_input_int", "value": "1" } ], "name": "Sells", "outputs": [ { "name": "Amount", "type": "int256", "value": "0", "displayName": " Amount" }, { "name": "Price", "type": "int256", "value": "0", "displayName": " Price" }, { "name": "Address", "type": "address", "value": "0x0000000000000000000000000000000000000000", "displayName": " Address" } ], "type": "function", "displayName": " Sells" }, { "inputs": [], "type": "constructor" } ]

No fees or warranties are involved. The contract might have errors. Expect all funds send to the contract to be lost. 
Read the contract first!

How To

1. Send (test) Ether to the contract
2. Create a buy or sell order by sending an amount and a price to the contract
    - Price in Wei (x 10^18)
    - Amount in sub units (x 10^18)
3. Cancel an order by sending the price (in Wei) of the order to the contract
4. Withdraw all your funds

The contract could be used for trading every assed - without actual exchanging anything.
In this test we trade 1 Ether for 1 Ether (pretty useless).

If you want to buy something - then buy it for the funds you send to the contract. 
If you want to sell something without having it - the contract places some of your funds as security.
The security is released as soon you buy your sold amount back. 

Feel free to copy, modify and deploy the contract as you wish. 

----
ToDo

- Debugging
    Variable "Own_FeedBack" returns a number which indicates what the contract did
    Example 12323401  
        12  Buy_Order
        32  Create_Buy_Order
        34  Add_Sell_Order
        01  Place the order on position 1 of the list
- GUI 
- Reduce the code to 15 lines or less
